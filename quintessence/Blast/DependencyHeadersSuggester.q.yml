properties:


  - name: suggested_symbol_headers
    type: std::map<std::string, std::vector<std::string>>
    init_with: 'get_default_suggested_symbol_headers()'


functions:


  - name: suggested_headers
    type: std::vector<std::string>
    parameters:
      - name: symbol
        type: std::string
        default_argument: '"[unset-symbol]"'
    body: |
      if (suggested_symbol_headers.count(symbol) == 0) return {};
      return suggested_symbol_headers[symbol];


  - name: suggested_headers_csv
    type: std::string
    parameters:
      - name: symbol
        type: std::string
        default_argument: '"[unset-symbol]"'
    body: |
      return Blast::StringJoiner(suggested_headers(symbol), ", ").join();
    body_dependency_symbols:
      - Blast::StringJoiner


  - name: get_default_suggested_symbol_headers
    type: std::map<std::string, std::vector<std::string>>
    body: |
      return std::map<std::string, std::vector<std::string>>{
         { "ALLEGRO_FONT", { "allegro5/allegro_font.h" }, },
         { "ALLEGRO_BITMAP", { "allegro5/allegro.h" }, },
         { "ALLEGRO_DISPLAY", { "allegro5/allegro.h" }, },
         { "ALLEGRO_COLOR", { "allegro5/allegro.h" }, },
         { "StageInterface", { "Hexagon/StageInterface.hpp" }, },
         { "std::function", { "functional" }, },
         { "std::min", { "algorithm" }, },
         { "std::max", { "algorithm" }, },
         { "fmod", { "cmath" }, },
      };


dependencies:


  - symbol: Blast::StringJoiner
    headers: [ Blast/StringJoiner.hpp ]


