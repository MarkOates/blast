properties:
  - name: base_directory
    type: std::string
    init_with: "\"\""
    constructor_arg: true
functions:
  - name: list_symlinks
    type: std::vector<std::pair<std::string, std::string>>
    body: |
      std::string command = "find ~/Desktop/Release";
      Blast::ShellCommandExecutorWithCallback executor(command, ShellCommandExecutorWithCallback::simple_silent_callback);
      std::string executor_result = executor.execute();
      StringSplitter splitter(executor_result, '\n');

      std::vector<std::string> filenames = splitter.split();

      std::vector<std::pair<std::string, std::string>> result;

      for (auto &filename : filenames)
      {
         Blast::Project::SymlinkChecker symlink_checker(filename);
         if (symlink_checker.is_symlink())
         {
            std::pair<std::string, std::string> this_symlink_info{ filename, symlink_checker.read_symlink_target() };
            result.push_back(this_symlink_info);
         }
      }

      return result;
    body_dependency_symbols:
      - Blast::Project::SymlinkChecker
      - Blast::ShellCommandExecutorWithCallback
      - StringSplitter
dependencies:
  - symbol: std::vector<std::pair<std::string, std::string>>
    headers: [ vector, string ]
  - symbol: StringSplitter
    headers: [ Blast/StringSplitter.hpp ]
  - symbol: Blast::Project::SymlinkChecker
    headers: [ Blast/Project/SymlinkChecker.hpp ]
  - symbol: Blast::ShellCommandExecutorWithCallback
    headers: [ Blast/ShellCommandExecutorWithCallback.hpp ]
