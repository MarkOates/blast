properties:
  - name: filename
    type: std::string
    init_with: "\"\""
    constructor_arg: true
functions:
  - name: is_symlink
    type: bool
    body: |
      std::filesystem::path path(filename);
      return std::filesystem::exists(path) && std::filesystem::is_symlink(path);
    body_dependency_symbols:
      - std::filesystem::path
      - std::filesystem::exists
      - std::filesystem::is_symlink
  - name: read_symlink_target
    type: std::string
    body: |
      char buff[512];
      ssize_t len = ::readlink(filename.c_str(), buff, sizeof(buff)-1);
      if (len != -1) {
         buff[len] = '\0';
         return std::string(buff);
      }
      throw std::runtime_error("an error occurred when trying to read_symlink_target in Blast/Project/SymlinkChecker");
    body_dependency_symbols:
      - readlink
      - std::string
dependencies:
  - symbol: std::filesystem::path
    headers: [ filesystem ]
  - symbol: std::filesystem::exists
    headers: [ filesystem ]
  - symbol: std::filesystem::is_symlink
    headers: [ filesystem ]
  - symbol: readlink
    headers: [ unistd.h ]
  - symbol: stat
    headers: [ sys/stat.h ]
