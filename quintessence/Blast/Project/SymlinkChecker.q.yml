properties:
  - name: filename
    type: std::string
    init_with: "\"\""
    constructor_arg: true
functions:
  - name: is_symlink
    type: bool
    body: |
      struct stat p_statbuf;

      //if (lstat(filename.c_str(), &p_statbuf) < 0)
      //{
         //throw std::runtime_error("[Project/SymlinkChecker error:] An error occurred while attempting to is_symlink");
      //}

      //return (S_ISLNK(p_statbuf.st_mode) == 1);
      return false;
    body_dependency_symbols:
      - stat
  - name: read_symlink_target
    type: std::string
    body: |
      //char buff[512];
      //ssize_t len = ::readlink(filename.c_str(), buff, sizeof(buff)-1);
      //if (len != -1) {
         //buff[len] = '\0';
         //return std::string(buff);
      //}
      //throw std::runtime_error("an error occurred when trying to read_symlink_target in Blast/Project/SymlinkChecker");
      return "";
    body_dependency_symbols:
      - readlink
      - std::string
dependencies:
  - symbol: readlink
    headers: [ unistd.h ]
  - symbol: stat
    headers: [ sys/stat.h ]
