properties:
  - name: filename
    type: std::string
    init_with: "\"\""
    constructor_arg: true
functions:
  - name: is_symlink
    type: bool
    body: |
      std::filesystem::path path(filename);
      return std::filesystem::exists(path) && std::filesystem::is_symlink(path);
    body_dependency_symbols:
      - std::filesystem::path
      - std::filesystem::exists
      - std::filesystem::is_symlink
  - name: read_symlink_target
    type: std::string
    body: |
      if (!is_symlink())
      {
         std::string error_message = "an error occurred when trying to read_symlink_target in Blast/Project/SymlinkChecker";
         throw std::runtime_error(error_message);
      }
      std::filesystem::path path(filename);
      return std::filesystem::read_symlink(path).string();
    body_dependency_symbols:
      - std::filesystem::path
      - std::filesystem::read_symlink
dependencies:
  - symbol: std::filesystem::path
    headers: [ filesystem ]
  - symbol: std::filesystem::exists
    headers: [ filesystem ]
  - symbol: std::filesystem::is_symlink
    headers: [ filesystem ]
  - symbol: std::filesystem::read_symlink
    headers: [ filesystem ]
