properties:
  - name: filename
    type: std::string
    init_with: "\"\""
    constructor_arg: true
functions:
  - name: is_symlink
    type: bool
    body: |
      struct stat p_statbuf;

      if (lstat(filename.c_str(), &p_statbuf) < 0)
      {
         throw std::runtime_error("[Project/SymlinkChecker error:] An error occurred while attempting to is_symlink");
      }

      return (S_ISLNK(p_statbuf.st_mode) == 1);
    body_dependency_symbols:
      - stat
  - name: read_symlink_target
    type: std::string
    body: |
      char linkname[256];
      // from https://linux.die.net/man/2/readlink
      //ssize_t readlink(const char *path, char *buf, size_t bufsiz);
      ssize_t r;
      r = readlink(filename.c_str(), linkname, 256);
      return linkname;
    body_dependency_symbols:
      - readlink
      - std::string
dependencies:
  - symbol: readlink
    headers: [ unistd.h ]
  - symbol: stat
    headers: [ sys/stat.h ]
