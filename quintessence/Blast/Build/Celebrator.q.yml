functions:


  - name: generate_full_width_output_banner
    type: std::string
    parameters:
      - name: message
        type: std::string
        default_argument: "\"\""
      - name: width
        type: int
        default_argument: 80
      - name: fill_char
        type: char
        default_argument: "'='"
      - name: num_leading_fill_characters
        type: std::size_t
        default_argument: 4
    body: |
      std::string decorated_message = std::string(num_leading_fill_characters, fill_char) + " " + message + " ";

      std::stringstream stream;
      stream
        << std::left
        << std::setfill(fill_char)
        << std::setw(width)
        << decorated_message
        ;
      return stream.str();
    body_dependency_symbols:
      - std::stringstream
      - std::string
      - std::setfill
      - std::setw


  - name: generate_pass_banner
    type: std::string
    parameters:
      - name: width
        type: int
        default_argument: 80
    body: |
      char fill_char = ' ';

      std::vector<std::string> lines = {
        "▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒",
        "▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒     █▀▀▀▀▄  █▀▀▀▀█  █▀▀▀▀▀  █▀▀▀▀▀    ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒",
        "▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒     █▄▄▄▄▀  █▄▄▄▄█  ▀▀▀▀▀█  ▀▀▀▀▀█    ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒",
        "▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒     ▀       ▀    ▀  ▀▀▀▀▀▀  ▀▀▀▀▀▀    ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒",
        "▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒",
      };

      std::string CONSOLE_COLOR_GREEN = "\033[32m";
      std::string CONSOLE_COLOR_DEFAULT = "\033[0m";

      std::stringstream stream;
      stream << CONSOLE_COLOR_GREEN;
      for (auto &line : lines)
      {
        stream
          << std::left
          << std::setfill(fill_char)
          << std::setw(width)
          << line
          << std::endl
          ;
      }
      stream << CONSOLE_COLOR_DEFAULT;
      return stream.str();
    body_dependency_symbols:
      - std::stringstream
      - std::vector
      - std::string
      - std::setfill
      - std::setw



dependencies:


  - symbol: std::setfill
    headers: [ iomanip ]
  - symbol: std::setw
    headers: [ iomanip ]
