properties:


  - name: type
    init_with: '"void"'
    constructor_arg: true
    getter: true

  - name: name
    init_with: '"unnamed_function"'
    constructor_arg: true
    getter: true

# NOTE: "signature" is not the correct name here, "parameter_list" would be more accurate
  - name: signature
    type: std::vector<Blast::Cpp::FunctionArgument>
    init_with: '{}'
    constructor_arg: true
    getter: true

  - name: 'body'
    type: 'std::string'
    init_with: '"return;"'
    constructor_arg: true
    getter: true

  - name: 'is_static'
    type: 'bool'
    init_with: 'false'
    constructor_arg: true
    getter: true

  - name: 'is_const'
    type: 'bool'
    init_with: 'false'
    constructor_arg: true
    getter: true

  - name: 'is_override'
    type: 'bool'
    init_with: 'false'
    constructor_arg: true
    getter: true

  - name: 'is_virtual'
    type: "bool"
    init_with: "false"
    constructor_arg: true
    getter: true

  - name: "is_pure_virtual"
    type: "bool"
    init_with: "false"
    constructor_arg: true
    getter: true

  - name: "is_final_override"
    type: "bool"
    init_with: "false"
    constructor_arg: true
    getter: true

  - name: "is_private"
    type: "bool"
    init_with: "false"
    constructor_arg: true
    getter: true

  - name: "is_protected"
    type: "bool"
    init_with: "false"
    constructor_arg: true
    getter: true


dependencies:


  - symbol: std::vector<Blast::Cpp::FunctionArgument>
    headers: [ vector, Blast/Cpp/FunctionArgument.hpp ]
  - symbol: Blast::Cpp::FunctionArgument
    headers: [ Blast/Cpp/FunctionArgument.hpp ]


