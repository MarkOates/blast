properties:


  - name: macos_base_directory
    type: std::string
    init_with: DEFAULT_MACOS_BASE_DIRECTORY
    getter: true
    setter: true

  - name: microsoft_windows_base_directory
    type: std::string
    init_with: DEFAULT_MICROSOFT_WINDOWS_BASE_DIRECTORY
    getter: true
    setter: true

  - name: DEFAULT_MACOS_BASE_DIRECTORY
    constexpr: true
    static: true
    type: const char*
    init_with: '(char*)"/Users/markoates/"'

  - name: DEFAULT_MICROSOFT_WINDOWS_BASE_DIRECTORY
    constexpr: true
    static: true
    type: const char*
    init_with: '(char*)"/msys64/home/Mark/"'

  - name: DEFAULT_PROJECT_DIRECTORY
    constexpr: true
    static: true
    type: const char*
    init_with: '(char*)"Repos/"'

  - name: DEFAULT_BUILDS_DIRECTORY
    constexpr: true
    static: true
    type: const char*
    init_with: '(char*)"Builds/"'


methods:


  - name: infer_base_directory
    type: std::string
    body: |
      Blast::SystemInfo system_info;
      if (system_info.is_microsoft_windows()) return microsoft_windows_base_directory;
      else if (system_info.is_apple_mac()) return macos_base_directory;

      Blast::Errors::throw_error(
         "Blast::DeveloperSystem::infer_base_directory",
         "Could not infer the type of system (windows/mac)"
      );

      return "";
    body_dependency_symbols:
      - Blast::SystemInfo
      - Blast::Errors


  - name: infer_projects_directory
    type: std::string
    body: |
      // project? projects? repos?
      return infer_base_directory() + DEFAULT_PROJECT_DIRECTORY;


  - name: infer_builds_directory
    type: std::string
    body: |
      return infer_base_directory() + DEFAULT_BUILDS_DIRECTORY;


dependencies:


  - symbol: Blast::SystemInfo
    headers: [ Blast/SystemInfo.hpp ]
  - symbol: Blast::Errors
    headers: [ Blast/Errors.hpp ]


