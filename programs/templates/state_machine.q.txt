properties:


  - name: state
    type: uint32_t
    init_with: STATE_UNDEF

  - name: state_changed_at
    type: float
    init_with: 0.0f

  - name: STATE_UNDEF
    type: uint32_t
    init_with: 0
    const: true
    static: true
    constexpr: true

  - name: STATE_REVEALING
    type: uint32_t
    init_with: 1
    const: true
    static: true
    constexpr: true

  - name: STATE_AWAITING_USER_INPUT
    type: uint32_t
    init_with: 2
    const: true
    static: true
    constexpr: true

  - name: STATE_CLOSING_DOWN
    type: uint32_t
    init_with: 3
    const: true
    static: true
    constexpr: true


functions:


  - name: set_state
    parameters:
      - name: state
        type: uint32_t
        default_argument: STATE_UNDEF
    guards: [ is_valid_state(state) ]
    body: |
      uint32_t previous_state = this->state;

      switch (state)
      {
         case STATE_REVEALING:
         break;

         case STATE_AWAITING_USER_INPUT:
         break;

         case STATE_CLOSING_DOWN:
         break;

         default:
            throw std::runtime_error("weird error");
         break;
      }

      this->state = state;
      state_changed_at = al_get_time();

      return;


  - name: update_state
    parameters:
      - name: time_now
        type: float
        default_argument: al_get_time()
    guards: [ is_valid_state(state) ]
    body: |
      float age = infer_current_state_age(time_now);

      switch (state)
      {
         case STATE_REVEALING:
         break;

         case STATE_AWAITING_USER_INPUT:
         break;

         case STATE_CLOSING_DOWN:
         break;

         default:
            throw std::runtime_error("weird error");
         break;
      }

      return;


  - name: is_valid_state
    type: bool
    static: true
    parameters:
      - name: state
        type: uint32_t
        default_argument: STATE_UNDEF
    body: |
      std::set<uint32_t> valid_states =
      {
         STATE_REVEALING_MAP,
         STATE_AWAITING_USER_INPUT,
         STATE_CLOSING_DOWN,
      };
      return (valid_states.count(state) > 0);
    body_dependency_symbols:
      - std::set


  - name: infer_current_state_age
    type: float
    parameters:
      - name: time_now
        type: float
        default_argument: al_get_time()
    body: |
      return (time_now - state_changed_at);


